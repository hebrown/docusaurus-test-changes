name: GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Get yarn cache
        id: yarn-cache
        run: echo "YARN_CACHE_DIR=$(yarn cache dir)" >> "${GITHUB_OUTPUT}"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.YARN_CACHE_DIR }}
          key: ${{ runner.os }}-website-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-website-
      - run: yarn install --frozen-lockfile
      - run: yarn build

      - name: Set custom CNAME
        id: set-cname
        run: echo "PAGE_CNAME=$(echo '${{ github.repository }}' | awk -F'/' '{print $2}').hbrown-test.com" >> $GITHUB_ENV

      - name: Check CNAME and HTTPS enforcement
        id: check-https
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          RESPONSE=$(curl -L -s -H "Accept: application/vnd.github+json" -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/${{ github.repository }}/pages)
          echo "CNAME_EXISTS=$(echo $RESPONSE | jq -r '.cname != null')" >> $GITHUB_ENV
          echo "HTTPS_ENFORCED=$(echo $RESPONSE | jq -r '.https_enforced')" >> $GITHUB_ENV


      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build
          force_orphan: true
          allow_empty_commit: true

      - name: Set Custom Domain
        shell: bash
        run: |
          echo "Setting Custom Domain"
          curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GHP_DEPLOY_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pages \
            -d '{"cname":"mypage9.hbrown-test.com"}'

      - name: Enable Enforce HTTPS
        if: env.HTTPS_ENFORCED == 'false'
        env:
          HTTPS_TOKEN: ${{ secrets.GHP_DEPLOY_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          MAX_RETRIES=30
          RETRY_INTERVAL=30
          for ((i=1; i<=MAX_RETRIES; i++)); do
            echo "Attempt $i to enforce HTTPS"
            HTTP_STATUS=$(curl -L -s -o response.json -w "%{http_code}" \
              -X PUT \
              -H "Authorization: Bearer $HTTPS_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${{ github.repository }}/pages \
              -d '{"https_enforced": true}')
            if [[ "$HTTP_STATUS" == "204" ]]; then
              echo "HTTPS enforcement successful"
              break
            else
              echo "HTTPS enforcement failed with status $HTTP_STATUS. Retrying in $RETRY_INTERVAL seconds..."
              sleep $RETRY_INTERVAL
            fi
          done
          if [[ "$HTTP_STATUS" != "204" ]]; then
            echo "Failed to enforce HTTPS after $MAX_RETRIES attempts."
            exit 1
          fi
